
class Solution {
public:
    
    
   bool validBST(TreeNode* root,long max,long min){
       if(root==NULL) return true;
       
       if(root->val >= max || root->val<= min)return false;
       
       //when i'm checking for left subtree
       //max value value that can be possible for left subtree is a number <root->val
       //so we r passing max as root->val
       //an minimum element can be any element i.e any number less than (-2147483647 - 1)
       
       //IIIlarly for righttree max value posisble is anything but min value possible is 
       //  is root->value 
      return validBST(root->left,root->val,min) && validBST(root->right,max,root->val);
       
    }
    
    

    bool isValidBST(TreeNode* root) {
        if(root==NULL) return true;
        
          long max=LONG_MAX;
          long min=LONG_MIN;
        return validBST(root,max,min) ; 
    }
};
