/* Node is defined as
  class Node {
  public:
    int data;
    Node* next;

    Node(int x) {
        data = x;
        next = nullptr;
    }
};
*/
class Solution {
  public:
    Node* segregate(Node* head) {
        
        if(head==NULL || head->next==NULL)
         return head;
        
        Node* zeroHead=new Node(-1),*oneHead=new Node(-1),*twoHead=new Node(-1);
        
        Node* zero = zeroHead , *one=oneHead , *two=twoHead;
        Node* temp=head;
        
        while(temp!=NULL){
            
            if(temp->data==0){
                zero->next=temp;
                zero=zero->next;
            }
            
            else if(temp->data==1){
                one->next=temp;
                one=one->next;
            }
            
            else {
                two->next=temp;
                two=two->next;
            }
            
            temp=temp->next;
        }
        
        
               // Stitch the three lists together
        zero->next = (oneHead->next) ? oneHead->next : twoHead->next;
        one->next  = twoHead->next;
        two->next  = nullptr;
        
        return zeroHead->next; 
        
    }
};
