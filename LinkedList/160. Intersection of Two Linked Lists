// class Solution { 
    
//     public: ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) { 
//         unordered_map<ListNode*, int> m;
        
//          while(headA != NULL){
//              m[headA]++; 
//              headA = headA -> next; 
//          }
             
             
//          while(headB != NULL){ 
//             if(m[headB] > 0){ 
//                 return headB; 
//             }
//              headB = headB -> next; 
//         }
        
        
//          return NULL; 
         
// }

//  };

// these 2 LL are

// a1 a2 c1 c2 c3
// b1 b2 b3 c1 c2 c3

// find the difference in the no.of nodes


//APPROACH - 2

class Solution { 
    
    public: ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) { 
        
        ListNode* l1=headA,*l2=headB;

        while(l1!=l2){

            l1 = l1==NULL ? headB : l1->next;
            l2 = l2==NULL ? headA : l2->next; 
        }

        return l1;
         
}

 };
