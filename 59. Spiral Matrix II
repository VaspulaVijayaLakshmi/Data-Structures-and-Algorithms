Given a positive integer n, generate an n x n matrix filled with elements from 1 to n2 in spiral order.

Input: n = 3
Output: [[1,2,3],[8,9,4],[7,6,5]]

Input: n = 1
Output: [[1]]



class Solution {
public:
    vector<vector<int>> generateMatrix(int n) {
       
        
        
        int top=0,bottom=n-1;
        int left=0,right=n-1;
        int cnt=1;
    
        vector<vector<int> > vv(n, vector<int>(n));
        
        while(top<=bottom && left<=right){
            
         //left to right   
        for(int i=left;i<=right;i++){
           vv[top][i]=cnt++;
        }
        top++;
        
        
          //top to bottom
        for(int i=top;i<=bottom;i++){
            vv[i][right]=cnt++;
        }
        right--;
        
        
       //right to left 
        if(top<=bottom)
       for(int i=right;i>=left;i--){
           vv[bottom][i]=cnt++;
           }
          
        bottom--;
        
        
            
        //bottom to top  
         if(top<=bottom)
         for(int i=bottom;i>=top;i--){
           vv[i][left]=cnt++;
          }
         left++;  
            
           
            
        }
        return vv;
            
    }
};
