Given an array, rotate the array to the right by k steps, where k is non-negative.

 

Example 1:

Input: nums = [1,2,3,4,5,6,7], k = 3
Output: [5,6,7,1,2,3,4]
Explanation:
rotate 1 steps to the right: [7,1,2,3,4,5,6]
rotate 2 steps to the right: [6,7,1,2,3,4,5]
rotate 3 steps to the right: [5,6,7,1,2,3,4]



Example 2:

Input: nums = [-1,-100,3,99], k = 2
Output: [3,99,-1,-100]
Explanation: 
rotate 1 steps to the right: [99,-1,-100,3]
rotate 2 steps to the right: [3,99,-1,-100]




class Solution {
public:
    
     void reverse(vector<int> &nums,int strt,int end)
    {
        
        int mid=strt+(end-strt)/2;
        
        for(int i=strt;i<=mid;i++)
        {
            int temp=nums[i];
            
            nums[i]=nums[end];
            nums[end]=temp;
            
            end--;
        }  
      
    }
    
    
    
    void rotate(vector<int>& nums, int k) {
      if(k!=0 && nums.size()!=k && nums.size()!=1)
         {
            
             k=k%nums.size();
         int partition=nums.size()-k-1;
         reverse(nums,0,partition);
         reverse(nums,partition+1,nums.size()-1);
         reverse(nums,0,nums.size()-1);
    } 
    }
};




