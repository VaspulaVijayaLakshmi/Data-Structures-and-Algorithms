class Solution {
    
     public int maxSubArray(int[] nums) {
         
   int dp []=  new int[nums.length];
   int max  =  nums[0];
   dp[0 ] =  nums[0];
         
   for( int i=1;i<nums.length ;i++  ){
      
       dp[i] =  Math.max( dp[i-1]+nums[i] ,  nums[i]);
        max= Math.max(dp[i],max);
       
   }
   return max;    
     }
    
}




class Solution {
public:
    int maxSubArray(vector<int>& nums) {
       
        int maxSum=INT_MIN,currSum=0;
        for(int i=0;i<nums.size();i++)
        {
            
            
            currSum+=nums[i];
            
            maxSum=max(currSum,maxSum);
            
            if(currSum<0) currSum=0;
            
        }
        return maxSum;
        
    }
};
