class Solution {
public:
    vector<int> maxSlidingWindow(vector<int>& arr, int k) {
        
        deque<int> q;
        vector<int> res;

        int i=0,j=0;
        int n=arr.size();

        while(j<n){

            while( !q.empty() && arr[j]>q.back()) q.pop_back();
            q.push_back(arr[j]);

            // if window size hits
            if(j-i+1==k){
                  
                res.push_back(q.front());

                // slide the window
                if(arr[i] == q.front()){
                    q.pop_front();
                }

                i++;

            }

            j++;
             
        }

        return res;
    }
};



// queue
// [1]

// 3 is greater so 1 we dont need anymore
// [3]


// once 3 pops out , -1 maybe potential greater element
// [3,-1]


// -3 maybe potential greater element
// [3,-1,-3]
