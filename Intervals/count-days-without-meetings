class Solution {
public:
    int countDays(int days, vector<vector<int>>& meetings) {
        
        sort(meetings.begin(),meetings.end());

        int c=0; 
        int prev_strt = meetings[0][0];
        int prev_end  = meetings[0][1];

        for(int i=1;i<meetings.size();i++){
          
          if(meetings[i][0] > prev_end)
           c+=(meetings[i][0] - prev_end-1);

        //    why prev = max(prev, curr)
        // because consider this scenario
        // [1 9][5 6]

        //  9 should be considered not the curr meet end time

           prev_end = max(prev_end,meetings[i][1]);

        }

        if(days>prev_end)
         c+= (days-prev_end);

        if(meetings[0][0]>1)
        c+=(meetings[0][0]-1);


        return c;
        

    }
};



// days=10
// meetings = [[5,7],[1,3],[9,10]]

 
// sort the meetings

// 1 - 10 days

// [1 3] [5 7] [9 10]

//      4     8


// eg 2:

// 5days

// days 
//  [1 3] [2 4]
//    3>2 overlap last interval



// days =
// 8

// meetings =
// [[3,4],[4,8],[2,5],[3,8]]

// [2,5] [3,4] [3,8] [4,8] 
