Given an integer array nums of unique elements, return all possible subsets (the power set).

The solution set must not contain duplicate subsets. Return the solution in any order.

 

Example 1:

Input: nums = [1,2,3]
Output: [[],[1],[2],[1,2],[3],[1,3],[2,3],[1,2,3]]
Example 2:

Input: nums = [0]
Output: [[],[0]]



class Solution {
public:
    
    void generateSubsets(vector<int>& nums,vector<vector<int>> &res,
                         vector<int> &temp,int currIndex){
        
        if(currIndex>=nums.size()){
            res.push_back(temp);
            return; 
          
        }
        
        temp.push_back(nums[currIndex]);
        
        generateSubsets(nums,res,temp,currIndex+1);
        temp.pop_back();
        generateSubsets(nums,res,temp,currIndex+1);
        
    }
    
    
    
    
    vector<vector<int>> subsets(vector<int>& nums) {
       
         vector<vector<int>> res;
         vector<int> temp;
        
        generateSubsets(nums,res,temp,0);
        return res;
        
    }
};
