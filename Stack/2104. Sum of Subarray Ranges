class Solution {
public:
    long long subArrayRanges(vector<int>& nums) 
    {
        int n=nums.size();
        vector<int>prevgreater(n),nextgreater(n);
        vector<int>prevsmaller(n),nextsmaller(n);
        stack<int>st;

        //prevsmaller
        for(int i=0;i<n;i++)
        {
            while(!st.empty() && nums[st.top()]>=nums[i]) st.pop();
            prevsmaller[i]=st.empty()?-1:st.top();
            st.push(i);
        }
        while(!st.empty()) st.pop();

        //nextsmaller
        for(int i=n-1;i>=0;i--)
        {
            while(!st.empty() && nums[st.top()]>nums[i]) st.pop();
            nextsmaller[i]=st.empty()?n:st.top();
            st.push(i);
        }
        while(!st.empty()) st.pop();

        //prevgreater
        for(int i=0;i<n;i++)
        {
            while(!st.empty() && nums[st.top()]<=nums[i]) st.pop();
            prevgreater[i] = st.empty()?-1 :st.top();
            st.push(i);
        }
        while(!st.empty()) st.pop();

        //nextgreater
        for(int i=n-1;i>=0;i--)
        {
            while(!st.empty() && nums[st.top()]<nums[i]) st.pop();
            nextgreater[i]=st.empty()?n:st.top();
            st.push(i);
        }

        long long res=0;
        for(int i=0;i<n;i++)
        {
            long long maxcount= (long long)(i-prevgreater[i])*(nextgreater[i]-i);
            long long mincount= (long long)(i-prevsmaller[i])*(nextsmaller[i]-i);
            res+=(maxcount-mincount)*nums[i];
        }

        return res;
        

    }
};


// 907. Sum of Subarray Minimums


// Contribution of each element as the maximum of subarrays.
// Contribution of each element as the minimum of subarrays.
// The final result is the difference between the sum of maximums and sum of minimums.



// For each element, find:
// Previous Smaller or Equal Element (PSEE) and Next Smaller Element (NSE) → counts contribution as minimum.
// Previous Larger or Equal Element (PLEE) and Next Larger Element (NLE) → counts contribution as maximum.
// Multiply contributions accordingly and sum them.
// The final answer = sum of maximum contributions – sum of minimum contributions.
