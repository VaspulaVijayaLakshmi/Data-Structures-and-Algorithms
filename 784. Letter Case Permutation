Given a string s, you can transform every letter individually to be lowercase or uppercase to create another string.

Return a list of all possible strings we could create. Return the output in any order.

 

Example 1:

Input: s = "a1b2"
Output: ["a1b2","a1B2","A1b2","A1B2"]



Example 2:

Input: s = "3z4"
Output: ["3z4","3Z4"]


Recursion tree:
//https://leetcode.com/problems/letter-case-permutation/discuss/1068215/Detailed-c%2B%2B-solution-with-recursion-tree



class Solution {
public:
    void solve(string S, vector<string>&ans,int i) {
        if(i == S.size()) { // base condition
            ans.push_back(S);
            return;
        }
        
        if(isalpha(S[i])) { // if the scanned character is alphabet
            S[i] = toupper(S[i]);
            solve(S,ans,i+1);
            S[i] = tolower(S[i]);
            solve(S,ans,i+1);
        }
        else { // if the scanned character is number
            solve(S,ans,i+1);
        }
    }
    vector<string> letterCasePermutation(string S) {
        vector<string>ans;
        solve(S,ans,0);
        return ans;
    }

};
