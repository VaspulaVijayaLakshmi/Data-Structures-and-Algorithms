class Solution {
public:
    int findKthLargest(vector<int>& nums, int k) {
        
         
   // Method 1
   //   sort the array and then return n-k element
        
        
   // Method-2
   //     Max heap
        priority_queue<int> q(nums.begin(),nums.end());
        int n=nums.size();
        
        for(int i=1;i<k;i++){
            q.pop();
        }
        
        return q.top();
        
        
    // Method 3
    //  Min heap
        priority_queue<int,vector<int>,greater<int>> q;
        
        for(int i=0;i<nums.size();i++){
            
            q.push(nums[i]);
            
            if(q.size()>k)
                q.pop();
            
              
        }
        
        return q.top();
         
        
    }
};

