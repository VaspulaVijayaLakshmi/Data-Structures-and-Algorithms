class Solution {
public:
    long long largestPerimeter(vector<int>& nums) {

         sort(nums.begin(), nums.end());
        int n=nums.size();

        long long perimeter=0, sum=nums[0]+nums[1];
        
        for(int i=2; i<n; i++){
            if (sum>nums[i])
                perimeter=sum+nums[i];
            sum+=nums[i];
        }

        return perimeter==0?-1:perimeter;
    }
};



// [1,1,2,3,5,12,50]

// [1,2,4,7,12,24,74]


// index should strt from 2, becaue polyon shold have atleast 3 elements

// now [0-2]  - sum-4
// also , polygon largest side here is - idx-2 - 2


// nums[idx] < prefixsum[idx-1]
// sum is greater than largest side - 2!>2 so we cant consider this


// now next consider - idx=3


// prefixsum = 7
// we can consider - [1,2,2,3]
// or we can consider - [2,2,3].....


