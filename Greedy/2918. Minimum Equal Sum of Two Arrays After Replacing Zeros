class Solution {
public:
    long long minSum(vector<int>& nums1, vector<int>& nums2) {

        long long sum1 = 0, sum2 = 0;
        int zeros1 = 0, zeros2 = 0;

        for (int n : nums1) {
            if (n == 0) zeros1++;
            sum1 += n;
        }

        for (int n : nums2) {
            if (n == 0) zeros2++;
            sum2 += n;
        }

        if (zeros1 == 0 && zeros2 == 0) {
            return sum1 == sum2 ? sum1 : -1;
        } else if (zeros1 == 0) {
            return sum2 + zeros2 <= sum1 ? sum1 : -1;
        } else if (zeros2 == 0) {
            return sum1 + zeros1 <= sum2 ? sum2 : -1;
        }

        return max(sum1 + zeros1, sum2 + zeros2);
    }
};

// nums1 = [3,2,0,1,0]  - sum -  6
// nums2 = [6,5,0] - sum - 11 , this one we will 1


// nums1 = [2,0,2,0] - 4 - here i cant. ake 4 i can make min-6
// nums2 = [1,4] - 5 


// [2,0,2,0] - [2,2,2,1]
// [5,2] - 7

// if sum(nums2)<sums(nums1)
// return -1



