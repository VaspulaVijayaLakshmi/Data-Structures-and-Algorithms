class Solution {
public:
    int findLeastNumOfUniqueInts(vector<int>& arr, int k) {
        unordered_map<int,int> mp;
        for(int i=0;i<arr.size();i++){
            mp[arr[i]]++;
        }
        vector<pair<int, int>> v(mp.begin(), mp.end());
         sort(v.begin(), v.end(), [](auto& a, auto& b) {
        return a.second < b.second;  // ascending by value
    });
        int i=0;
        while(k>0){
            if(v[i].second>k){
                return v.size()-i;
            }
            else{
                k=k-v[i].second;
            }
            i++;
        }
        if(k==0){
            return v.size()-i;
        }
        return v.size()-i-1;
    }
};

// we need to use k optimally

// so choose the smallest freq ones


// [4,3,1,1,3,3,2]

// 4-1
// 3-3
// 1-2
// 2-1

// k=3

// so i can remove 4, 2

// now even if i remove 1 - 2 its still 2

//we can use heap + hashtable
